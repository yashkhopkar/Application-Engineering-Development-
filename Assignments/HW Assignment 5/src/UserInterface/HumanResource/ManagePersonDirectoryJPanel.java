/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.HumanResource;

import Business.Person;
import Business.PersonDirectory;
import Business.UserAccountDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yash
 */
public class ManagePersonDirectoryJPanel extends javax.swing.JPanel {
    JPanel CardSequenceJPanel;
    UserAccountDirectory userAccountList;
    PersonDirectory personlist;
    /**
     * Creates new form ManagePersonDirectoryJPanel
     */
    ManagePersonDirectoryJPanel(JPanel CardSequenceJPanel, UserAccountDirectory userAccountList, PersonDirectory personlist) {
       initComponents();
        this.CardSequenceJPanel = CardSequenceJPanel;
        this.userAccountList = userAccountList;
        this.personlist = personlist;
        populatePersonDirectory();
    }
    public void populatePersonDirectory()
    {
        DefaultTableModel dtm = (DefaultTableModel)tblManagePersonDir.getModel();
        dtm.setRowCount(0);
        for(Person p:personlist.getPersonlist())
        {
            Object [] row = new Object[3];
            row[0]  = p.getFirstName();
            row[1]  = p;
            //row[2]  = p.getUserAccount().getUsername();
            row[2]  = p.getUserAccount().getUsername();
            dtm.addRow(row);
            
        }
    }
    
//    public void refreshPersonDirectory()
//    {
//        int rowCount = tblManagePersonDir.getRowCount();
//        DefaultTableModel dtm = (DefaultTableModel)tblManagePersonDir.getModel();
//        for(int i  = rowCount-1;i>=0;i--)
//        {
//            dtm.removeRow(i);
//        }   
//        for(Person p:personlist.getPersonlist())
//        {
//            Object [] row = new Object[3];
//            row[0]  = p.getFirstName();
//            row[1]  = p;
//            row[2]  = " ";
//            dtm.addRow(row);
//            
//        }
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblManagePersonDir = new javax.swing.JTable();
        btnFindPerson = new javax.swing.JButton();
        btnCreateNewPerson = new javax.swing.JButton();
        btnUpdatePerson = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnDeletePerson = new javax.swing.JButton();

        jLabel1.setText("MANAGE PERSON DIRECTORY");

        tblManagePersonDir.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "User Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblManagePersonDir);
        if (tblManagePersonDir.getColumnModel().getColumnCount() > 0) {
            tblManagePersonDir.getColumnModel().getColumn(2).setResizable(false);
        }

        btnFindPerson.setText("FIND PERSON>>");
        btnFindPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindPersonActionPerformed(evt);
            }
        });

        btnCreateNewPerson.setText("NEW PERSON>>");
        btnCreateNewPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewPersonActionPerformed(evt);
            }
        });

        btnUpdatePerson.setText("UPDATE PERSON>>");
        btnUpdatePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePersonActionPerformed(evt);
            }
        });

        btnBack.setText("BACK<<");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnDeletePerson.setText("DELETE PERSON");
        btnDeletePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePersonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 870, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnFindPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnCreateNewPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnUpdatePerson, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(157, 157, 157)
                                .addComponent(btnBack))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnDeletePerson, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnFindPerson)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCreateNewPerson)
                .addGap(18, 18, 18)
                .addComponent(btnUpdatePerson)
                .addGap(18, 18, 18)
                .addComponent(btnDeletePerson)
                .addGap(8, 8, 8)
                .addComponent(btnBack)
                .addContainerGap(139, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindPersonActionPerformed
        // TODO add your handling code here:
        FindPersonJPanel panel = new FindPersonJPanel(CardSequenceJPanel,userAccountList,personlist);
        CardSequenceJPanel.add("FindPersonJPanel",panel);
        CardLayout layout = (CardLayout) CardSequenceJPanel.getLayout();
        layout.next(CardSequenceJPanel);


    }//GEN-LAST:event_btnFindPersonActionPerformed

    private void btnCreateNewPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNewPersonActionPerformed
        // TODO add your handling code here:
        CreateNewPersonJPanel panel = new CreateNewPersonJPanel(CardSequenceJPanel,userAccountList,personlist);
        CardSequenceJPanel.add("CreateNewPersonJPanel",panel);
        CardLayout layout = (CardLayout) CardSequenceJPanel.getLayout();
        layout.next(CardSequenceJPanel);

    }//GEN-LAST:event_btnCreateNewPersonActionPerformed

    private void btnUpdatePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePersonActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblManagePersonDir.getSelectedRow();
        if(selectedRow<0)
        {
        JOptionPane.showMessageDialog(null, "Please select a row first");
        }
        else
        {
        Person person = (Person)tblManagePersonDir.getValueAt(selectedRow, 1);
        UpdatePersonJPanel panel = new UpdatePersonJPanel(CardSequenceJPanel,userAccountList,personlist,person);
        CardSequenceJPanel.add("UpdatePersonJPanel",panel);
        CardLayout layout = (CardLayout) CardSequenceJPanel.getLayout();
        layout.next(CardSequenceJPanel);
        }
    }//GEN-LAST:event_btnUpdatePersonActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequenceJPanel.remove(this);
        CardLayout layout = (CardLayout) CardSequenceJPanel.getLayout();
        layout.previous(CardSequenceJPanel);

    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeletePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePersonActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblManagePersonDir.getSelectedRow();
        if(selectedRow<0)
        {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first");
        }
        else
        {
            Person person  = (Person)tblManagePersonDir.getValueAt(selectedRow, 1);
            personlist.deletePerson(person);
            populatePersonDirectory();
        }
    }//GEN-LAST:event_btnDeletePersonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateNewPerson;
    private javax.swing.JButton btnDeletePerson;
    private javax.swing.JButton btnFindPerson;
    private javax.swing.JButton btnUpdatePerson;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblManagePersonDir;
    // End of variables declaration//GEN-END:variables
}
