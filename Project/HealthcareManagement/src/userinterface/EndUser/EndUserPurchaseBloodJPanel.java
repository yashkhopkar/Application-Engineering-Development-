/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.EndUser;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.ClinicOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BloodPurchaseWorkRequest;
import Business.WorkQueue.BloodWorkRequest;
import Business.WorkQueue.NGOWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import utility.Validator;

/**
 *
 * @author shubhisharma
 */
public class EndUserPurchaseBloodJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    //private ClinicOrganization organization;
    private UserAccount account;
    private Enterprise enterprise;
    //private UserAccount userAccount;
    private EcoSystem business;
    /**
     * Creates new form EndUserPurchaseBloodJPanel
     */
    EndUserPurchaseBloodJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, EcoSystem business, ClinicOrganization clinicOrganization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        //this.organization = clinicOrganization;
        this.enterprise = enterprise;
        this.account = account;
        this.business = business;
        //this.account = account;
        populateTable();
        
    }

    public void populateTable(){
          DefaultTableModel model = (DefaultTableModel) tblReqBlood.getModel();
        
        model.setRowCount(0);
        
        for (WorkRequest work : business.getWorkQueue().getWorkRequestList()){
           if(work instanceof BloodPurchaseWorkRequest){ 
            Object[] row = new Object[3];
            row[0] = ((BloodPurchaseWorkRequest) work).getBloodGroup();
            row[1] = ((BloodPurchaseWorkRequest) work).getNoOfPackets();
            //row[2] = ((NGOWorkRequest) work).getRequestedTime();
            //row[3] = ((NGOWorkRequest) work).getVenue();
            row[2] = work;
            model.addRow(row);
           }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtBloodGroupReq = new javax.swing.JTextField();
        txtNoOfPackets = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnCreateReq = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblReqBlood = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        btnDeleteReq = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Purchase Blood");

        jLabel2.setBackground(new java.awt.Color(102, 217, 255));
        jLabel2.setText("Blood Group Required:");

        txtNoOfPackets.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNoOfPacketsKeyPressed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(102, 217, 255));
        jLabel3.setText("Number of blood packets required:");

        btnCreateReq.setBackground(new java.awt.Color(102, 217, 255));
        btnCreateReq.setText("Create Request");
        btnCreateReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateReqActionPerformed(evt);
            }
        });

        tblReqBlood.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Blood Group", "Number of Blood Packets", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblReqBlood);
        if (tblReqBlood.getColumnModel().getColumnCount() > 0) {
            tblReqBlood.getColumnModel().getColumn(0).setResizable(false);
            tblReqBlood.getColumnModel().getColumn(1).setResizable(false);
            tblReqBlood.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel4.setText("Request for Blood");

        btnDeleteReq.setBackground(new java.awt.Color(102, 217, 255));
        btnDeleteReq.setText("Delete Request");
        btnDeleteReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteReqActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(102, 217, 255));
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBloodGroupReq, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                            .addComponent(txtNoOfPackets)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(btnCreateReq))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnDeleteReq)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnBack)))
                .addContainerGap(394, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBloodGroupReq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNoOfPackets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(btnCreateReq)
                .addGap(28, 28, 28)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnDeleteReq)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBack)
                .addContainerGap(39, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateReqActionPerformed
        // TODO add your handling code here:
          // TODO add your handling code here:
        if(!txtBloodGroupReq.getText().equals("")){
            BloodPurchaseWorkRequest request= new BloodPurchaseWorkRequest();
            //request.setVaccine((Vaccine)comboVaccine.getSelectedItem());
            
          
            
                request.setBloodGroup(txtBloodGroupReq.getText());
                request.setNoOfPackets(Integer.parseInt(txtNoOfPackets.getText()));
                //request.setRequestedDate(txtDateNGOHospital.getText()); 
                //request.setRequestedTime(txtTimeNGOHospital.getText());
                request.setStatus("Requested");
                request.setSender(account);
                account.getWorkQueue().getWorkRequestList().add(request);
                business.getWorkQueue().getWorkRequestList().add(request);
                enterprise.getWorkQueue().getWorkRequestList().add(request);
                JOptionPane.showMessageDialog(null, "Request Submitted Successfully", "", JOptionPane.INFORMATION_MESSAGE);
            //organization.getWorkQueue().getWorkRequestList().add(request);
           
                populateTable();
        }else{
             JOptionPane.showMessageDialog(null, "Enter value", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnCreateReqActionPerformed

    private void btnDeleteReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteReqActionPerformed
        // TODO add your handling code here:
        int selectedRow= tblReqBlood.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select the row to delete the request", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{

            BloodPurchaseWorkRequest p=(BloodPurchaseWorkRequest) tblReqBlood.getValueAt(selectedRow, 2);

           // s.getWorkQueue().getWorkRequestList().remove(p);
            //organization.getWorkQueue().getWorkRequestList().remove(p);
            account.getWorkQueue().getWorkRequestList().remove(p);
            business.getWorkQueue().getWorkRequestList().remove(p);
            JOptionPane.showMessageDialog(null, "You have successfully deleted the request");
            populateTable();
        }
    }//GEN-LAST:event_btnDeleteReqActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtNoOfPacketsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoOfPacketsKeyPressed
        // TODO add your handling code here:
        Validator.onlyInteger(evt, txtNoOfPackets);
    }//GEN-LAST:event_txtNoOfPacketsKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateReq;
    private javax.swing.JButton btnDeleteReq;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblReqBlood;
    private javax.swing.JTextField txtBloodGroupReq;
    private javax.swing.JTextField txtNoOfPackets;
    // End of variables declaration//GEN-END:variables
}
